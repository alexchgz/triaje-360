{"version":3,"file":"angular2-hotkeys.js","sources":["ng:/angular2-hotkeys/lib/hotkey.model.ts","ng:/angular2-hotkeys/lib/hotkey.options.ts","ng:/angular2-hotkeys/lib/hotkeys.service.ts","ng:/angular2-hotkeys/lib/hotkeys.directive.ts","ng:/angular2-hotkeys/lib/hotkeys-cheatsheet/hotkeys-cheatsheet.component.ts","ng:/angular2-hotkeys/lib/hotkey.module.ts","ng:/angular2-hotkeys/public-api.ts","ng:/angular2-hotkeys/angular2-hotkeys.ts"],"names":[],"mappings":"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","sourcesContent":["export interface ExtendedKeyboardEvent extends KeyboardEvent {\n    returnValue: boolean; // IE returnValue\n}\n\nexport class Hotkey {\n    private formattedHotkey: string[];\n\n    static symbolize(combo: string): string {\n        const map: any = {\n            command: '\\u2318',       // ⌘\n            shift: '\\u21E7',         // ⇧\n            left: '\\u2190',          // ←\n            right: '\\u2192',         // →\n            up: '\\u2191',            // ↑\n            down: '\\u2193',          // ↓\n            // tslint:disable-next-line:object-literal-key-quotes\n            'return': '\\u23CE',      // ⏎\n            backspace: '\\u232B'      // ⌫\n        };\n        const comboSplit: string[] = combo.split('+');\n\n        for (let i = 0; i < comboSplit.length; i++) {\n            // try to resolve command / ctrl based on OS:\n            if (comboSplit[i] === 'mod') {\n                if (window.navigator && window.navigator.platform.indexOf('Mac') >= 0) {\n                    comboSplit[i] = 'command';\n                } else {\n                    comboSplit[i] = 'ctrl';\n                }\n            }\n\n            comboSplit[i] = map[comboSplit[i]] || comboSplit[i];\n        }\n\n        return comboSplit.join(' + ');\n    }\n\n    /**\n     * Creates a new Hotkey for Mousetrap binding\n     *\n     * @param combo       mousetrap key binding\n     * @param description description for the help menu\n     * @param callback    method to call when key is pressed\n     * @param action      the type of event to listen for (for mousetrap)\n     * @param allowIn     an array of tag names to allow this combo in ('INPUT', 'SELECT', and/or 'TEXTAREA')\n     * @param persistent  if true, the binding is preserved upon route changes\n     */\n    constructor(public combo: string | string[], public callback: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent | boolean,\n                public allowIn?: string[], public description?: string | Function, public action?: string,\n                public persistent?: boolean) {\n        this.combo = (Array.isArray(combo) ? combo : [combo as string]);\n        this.allowIn = allowIn || [];\n        this.description = description || '';\n    }\n\n    get formatted(): string[] {\n        if (!this.formattedHotkey) {\n\n            const sequence: string[] = this.combo as Array<string>;\n            for (let i = 0; i < sequence.length; i++) {\n                sequence[i] = Hotkey.symbolize(sequence[i]);\n            }\n            this.formattedHotkey = sequence;\n        }\n        return this.formattedHotkey;\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface IHotkeyOptions {\n    /**\n     * Disable the cheat sheet popover dialog? Default: false\n     */\n    disableCheatSheet?: boolean;\n    /**\n     * Key combination to trigger the cheat sheet. Default: '?'\n     */\n    cheatSheetHotkey?: string;\n\n    /**\n     * Use also ESC for closing the cheat sheet. Default: false\n     */\n    cheatSheetCloseEsc?: boolean;\n    /**\n     * Description for the ESC key for closing the cheat sheet (if enabed). Default: 'Hide this help menu'\n     */\n    cheatSheetCloseEscDescription?: string;\n    /**\n     * Description for the cheat sheet hot key in the cheat sheet. Default: 'Show / hide this help menu'\n     */\n    cheatSheetDescription?: string;\n}\n\nexport const HotkeyOptions = new InjectionToken<IHotkeyOptions>('HotkeyOptions');\n","import { Inject, Injectable } from '@angular/core';\nimport { Hotkey } from './hotkey.model';\nimport { Subject } from 'rxjs';\nimport { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport 'mousetrap';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    hotkeys: Hotkey[] = [];\n    pausedHotkeys: Hotkey[] = [];\n    mousetrap: MousetrapInstance;\n    cheatSheetToggle: Subject<any> = new Subject();\n\n    private preventIn = ['INPUT', 'SELECT', 'TEXTAREA'];\n\n    constructor(@Inject(HotkeyOptions) private options: IHotkeyOptions) {\n        // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n        Mousetrap.prototype.stopCallback = (event: KeyboardEvent, element: HTMLElement, combo: string, callback: Function) => {\n            // if the element has the class \"mousetrap\" then no need to stop\n            if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n                return false;\n            }\n            return (element.contentEditable && element.contentEditable === 'true');\n        };\n        this.mousetrap = new (Mousetrap as any)();\n        if (!this.options.disableCheatSheet) {\n            this.add(new Hotkey(\n                this.options.cheatSheetHotkey || '?',\n                function(_: KeyboardEvent) {\n                    this.cheatSheetToggle.next();\n                }.bind(this),\n                [],\n                this.options.cheatSheetDescription || 'Show / hide this help menu',\n            ));\n        }\n\n        if (this.options.cheatSheetCloseEsc) {\n            this.add(new Hotkey(\n                'esc',\n                function(_: KeyboardEvent) {\n                    this.cheatSheetToggle.next(false);\n                }.bind(this),\n                ['HOTKEYS-CHEATSHEET'],\n                this.options.cheatSheetCloseEscDescription || 'Hide this help menu',\n            ));\n        }\n\n    }\n\n    add(hotkey: Hotkey | Hotkey[], specificEvent?: string): Hotkey | Hotkey[] {\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.add(key, specificEvent) as Hotkey);\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.hotkeys.push(hotkey as Hotkey);\n        this.mousetrap.bind((hotkey as Hotkey).combo, (event: KeyboardEvent, combo: string) => {\n            let shouldExecute = true;\n\n            // if the callback is executed directly `hotkey.get('w').callback()`\n            // there will be no event, so just execute the callback.\n            if (event) {\n                const target: HTMLElement = (event.target || event.srcElement) as HTMLElement; // srcElement is IE only\n                const nodeName: string = target.nodeName.toUpperCase();\n\n                // check if the input has a mousetrap class, and skip checking preventIn if so\n                if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\n                    shouldExecute = true;\n                } else if (this.preventIn.indexOf(nodeName) > -1 &&\n                    (hotkey as Hotkey).allowIn.map(allow => allow.toUpperCase()).indexOf(nodeName) === -1) {\n                    // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\n                    shouldExecute = false;\n                }\n            }\n\n            if (shouldExecute) {\n                return (hotkey as Hotkey).callback.apply(this, [event, combo]);\n            }\n        }, specificEvent);\n        return hotkey;\n    }\n\n    remove(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        const temp: Hotkey[] = [];\n        if (!hotkey) {\n            for (const key of this.hotkeys) {\n                temp.push(this.remove(key) as Hotkey);\n            }\n            return temp;\n        }\n        if (Array.isArray(hotkey)) {\n            for (const key of hotkey) {\n                temp.push(this.remove(key) as Hotkey);\n            }\n            return temp;\n        }\n        const index = this.findHotkey(hotkey as Hotkey);\n        if (index > -1) {\n            this.hotkeys.splice(index, 1);\n            this.mousetrap.unbind((hotkey as Hotkey).combo);\n            return hotkey;\n        }\n        return null;\n    }\n\n    get(combo?: string | string[]): Hotkey | Hotkey[] {\n        if (!combo) {\n            return this.hotkeys;\n        }\n        if (Array.isArray(combo)) {\n            const temp: Hotkey[] = [];\n            for (const key of combo) {\n                temp.push(this.get(key) as Hotkey);\n            }\n            return temp;\n        }\n        for (const hotkey of this.hotkeys) {\n            if (hotkey.combo.indexOf(combo as string) > -1) {\n                return hotkey;\n            }\n        }\n        return null;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    pause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        if (!hotkey) {\n            return this.pause(this.hotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.pause(key) as Hotkey);\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.pausedHotkeys.push(hotkey as Hotkey);\n        return hotkey;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    unpause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        if (!hotkey) {\n            return this.unpause(this.pausedHotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.unpause(key) as Hotkey);\n            }\n            return temp;\n        }\n        const index: number = this.pausedHotkeys.indexOf(hotkey as Hotkey);\n        if (index > -1) {\n            this.add(hotkey);\n            return this.pausedHotkeys.splice(index, 1);\n        }\n        return null;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    reset() {\n        this.mousetrap.reset();\n    }\n\n    private findHotkey(hotkey: Hotkey): number {\n        return this.hotkeys.indexOf(hotkey);\n    }\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ExtendedKeyboardEvent, Hotkey } from './hotkey.model';\nimport { HotkeysService } from './hotkeys.service';\nimport 'mousetrap';\n\n@Directive({\n    selector: '[hotkeys]',\n    providers: [HotkeysService]\n})\nexport class HotkeysDirective implements OnInit, OnDestroy {\n    @Input() hotkeys: { [combo: string]: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent }[];\n\n    private mousetrap: MousetrapInstance;\n    private hotkeysList: Hotkey[] = [];\n    private oldHotkeys: Hotkey[] = [];\n\n    constructor(private hotkeysService: HotkeysService, private elementRef: ElementRef) {\n        this.mousetrap = new Mousetrap(this.elementRef.nativeElement); // Bind hotkeys to the current element (and any children)\n    }\n\n    ngOnInit() {\n        for (const hotkey of this.hotkeys) {\n            const combo = Object.keys(hotkey)[0];\n            const hotkeyObj: Hotkey = new Hotkey(combo, hotkey[combo]);\n            const oldHotkey: Hotkey = this.hotkeysService.get(combo) as Hotkey;\n            if (oldHotkey !== null) { // We let the user overwrite callbacks temporarily if you specify it in HTML\n                this.oldHotkeys.push(oldHotkey);\n                this.hotkeysService.remove(oldHotkey);\n            }\n            this.hotkeysList.push(hotkeyObj);\n            this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\n        }\n    }\n\n    ngOnDestroy() {\n        for (const hotkey of this.hotkeysList) {\n            this.mousetrap.unbind(hotkey.combo);\n        }\n        this.hotkeysService.add(this.oldHotkeys);\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Hotkey } from '../hotkey.model';\nimport { HotkeysService } from '../hotkeys.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'hotkeys-cheatsheet',\n    templateUrl: './hotkeys-cheatsheet.component.html',\n    styleUrls: ['./hotkeys-cheatsheet.component.css']\n})\nexport class HotkeysCheatsheetComponent implements OnInit, OnDestroy {\n    helpVisible = false;\n    @Input() title = 'Keyboard Shortcuts:';\n    subscription: Subscription;\n\n    hotkeys: Hotkey[];\n\n    constructor(private hotkeysService: HotkeysService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.hotkeysService.cheatSheetToggle.subscribe((isOpen) => {\n            if (isOpen !== false) {\n                this.hotkeys = this.hotkeysService.hotkeys.filter(hotkey => hotkey.description);\n            }\n\n            if (isOpen === false) {\n                this.helpVisible = false;\n            } else {\n                this.toggleCheatSheet();\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    public toggleCheatSheet(): void {\n        this.helpVisible = !this.helpVisible;\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HotkeysDirective } from './hotkeys.directive';\nimport { HotkeysCheatsheetComponent } from './hotkeys-cheatsheet/hotkeys-cheatsheet.component';\nimport { CommonModule } from '@angular/common';\nimport { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport { HotkeysService } from './hotkeys.service';\n\n@NgModule({\n    declarations: [HotkeysDirective, HotkeysCheatsheetComponent],\n    imports: [CommonModule],\n    exports: [HotkeysDirective, HotkeysCheatsheetComponent]\n})\nexport class HotkeyModule {\n    // noinspection JSUnusedGlobalSymbols\n    static forRoot(options: IHotkeyOptions = {}): ModuleWithProviders<HotkeyModule> {\n        return {\n            ngModule : HotkeyModule,\n            providers : [\n                HotkeysService,\n                {provide : HotkeyOptions, useValue : options}\n            ]\n        };\n    }\n}\n","/*\n * Public API Surface of angular2-hotkeys\n */\n\nexport * from './lib/hotkeys.service';\nexport * from './lib/hotkeys.directive';\nexport * from './lib/hotkeys-cheatsheet/hotkeys-cheatsheet.component';\nexport * from './lib/hotkey.model';\nexport * from './lib/hotkey.options';\nexport * from './lib/hotkey.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}