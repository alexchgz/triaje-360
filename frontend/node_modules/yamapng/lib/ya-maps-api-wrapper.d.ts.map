{"version":3,"file":"ya-maps-api-wrapper.d.ts","sources":["ya-maps-api-wrapper.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as mapTypes from './ya-maps-types';\nimport { YaMapsAPILoader } from './services/ya-maps-loader';\nimport { YaMarker } from './directives/marker';\nimport { YaClaster } from './directives/claster';\nimport { YaObjectManager } from './directives/objectManager';\nimport { DocumentRef } from './utils/browser-globals';\nexport declare class YaMapsAPIWrapper {\n    private _loader;\n    private _zone;\n    private _map;\n    private _mapResolver;\n    private _documentRef;\n    constructor(_loader: YaMapsAPILoader, _zone: NgZone, d: DocumentRef);\n    createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void>;\n    setCenter(latitude: number, longitude: number): void;\n    getCenter(): Promise<void>;\n    panTo(points: any[], options: any[]): void;\n    subscribeToMapEvent<E>(eventName: string): Observable<E>;\n    createMarker(marker: YaMarker): Promise<mapTypes.Marker>;\n    removeGeo(overlay: any): void;\n    createClaster(claster: YaClaster): Promise<mapTypes.Claster>;\n    createObjectManager(objectManager: YaObjectManager): any;\n    navigateToGeoObject(objectManager: any, id: any): void;\n    checkYaSciptLoaded(): any;\n    objectManagerSetFilter(objectManager: any, filter: any): void;\n}\n"]}