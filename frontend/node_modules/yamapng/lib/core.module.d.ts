import { ModuleWithProviders } from '@angular/core';
import { YaMarker } from './directives/marker';
import { YaClaster } from './directives/claster';
import { YaObjectManager } from './directives/objectManager';
import { YaMapsAPILoaderConfigLiteral } from './services/ya-maps-loader';
import { YaMap } from './directives/ymap';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './directives/ymap';
import * as ɵngcc2 from './directives/marker';
import * as ɵngcc3 from './directives/claster';
import * as ɵngcc4 from './directives/objectManager';
export * from './ya-maps-types';
/**
 * @internal
 */
export declare function coreDirectives(): (typeof YaMarker | typeof YaClaster | typeof YaObjectManager | typeof YaMap)[];
/**
 * The angular-ya-maps core module. Contains all Directives/Services/Pipes
 * of the core module. Please use `YaCoreModule.forRoot()` in your app module.
 */
export declare class YaCoreModule {
    /**
     * Please use this method when you register the module at the root level.
     */
    static forRoot(yaMapsAPILoaderConfig: YaMapsAPILoaderConfigLiteral): ModuleWithProviders<YaCoreModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<YaCoreModule, [typeof ɵngcc1.YaMap, typeof ɵngcc2.YaMarker, typeof ɵngcc3.YaClaster, typeof ɵngcc4.YaObjectManager], never, [typeof ɵngcc1.YaMap, typeof ɵngcc2.YaMarker, typeof ɵngcc3.YaClaster, typeof ɵngcc4.YaObjectManager]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<YaCoreModule>;
}
export declare function YaCoreModuleForRoot(yaMapsAPILoaderConfig: YaMapsAPILoaderConfigLiteral): ModuleWithProviders<any>[];

//# sourceMappingURL=core.module.d.ts.map