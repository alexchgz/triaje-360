import { InjectionToken } from '@angular/core';
import { DocumentRef, WindowRef } from './../utils/browser-globals';
/**
 * Token for the config of the YaMapsAPILoaderConfigLiteral. Please provide an object of type {@link
  * YaMapsAPILoaderConfigLiteral}.
  */
import * as ɵngcc0 from '@angular/core';
export declare const LAZY_MAPS_API_CONFIG: InjectionToken<YaMapsAPILoaderConfigLiteral>;
/**
 * Configuration for the {@link LazyMapsAPILoader}.
 */
export interface YaMapsAPILoaderConfigLiteral {
    /**
     * API Key.
     */
    apiKey?: string;
}
export declare class YaMapsAPILoader {
    private _scriptLoadingPromise;
    private config;
    private _windowRef;
    private _documentRef;
    constructor(config: any, w: WindowRef, d: DocumentRef);
    load(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<YaMapsAPILoader, [{ optional: true; }, null, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<YaMapsAPILoader>;
}

//# sourceMappingURL=ya-maps-loader.d.ts.map