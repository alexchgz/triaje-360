/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, NgZone } from '@angular/core';
import { YaMapsAPIWrapper } from '../../ya-maps-api-wrapper';
var ClasterManager = /** @class */ (function () {
    function ClasterManager(_mapsWrapper, _zone) {
        this._mapsWrapper = _mapsWrapper;
        this._zone = _zone;
        this._clasters = new Map();
    }
    /**
     * @param {?} claster
     * @return {?}
     */
    ClasterManager.prototype.addClaster = /**
     * @param {?} claster
     * @return {?}
     */
    function (claster) {
        /** @type {?} */
        var clasterPromise = this._mapsWrapper.createClaster(claster);
        this._clasters.set(claster, clasterPromise);
    };
    ClasterManager.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ClasterManager.ctorParameters = function () { return [
        { type: YaMapsAPIWrapper },
        { type: NgZone }
    ]; };
    return ClasterManager;
}());
export { ClasterManager };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ClasterManager.prototype._clasters;
    /**
     * @type {?}
     * @private
     */
    ClasterManager.prototype._mapsWrapper;
    /**
     * @type {?}
     * @private
     */
    ClasterManager.prototype._zone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Rlci1tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8veWFtYXBuZy8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9tYW5hZ2Vycy9jbGFzdGVyLW1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBS25ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRzdEO0lBS0Usd0JBQW9CLFlBQThCLEVBQVUsS0FBYTtRQUFyRCxpQkFBWSxHQUFaLFlBQVksQ0FBa0I7UUFBVSxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBSGpFLGNBQVMsR0FDakIsSUFBSSxHQUFHLEVBQStCLENBQUM7SUFFc0MsQ0FBQzs7Ozs7SUFFdkUsbUNBQVU7Ozs7SUFBakIsVUFBa0IsT0FBa0I7O1lBQzVCLGNBQWMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFDL0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQzlDLENBQUM7O2dCQVZGLFVBQVU7Ozs7Z0JBSEYsZ0JBQWdCO2dCQUxKLE1BQU07O0lBK0IzQixxQkFBQztDQUFBLEFBdkJELElBdUJDO1NBdEJZLGNBQWM7Ozs7OztJQUN6QixtQ0FDdUM7Ozs7O0lBRTNCLHNDQUFzQzs7Ozs7SUFBRSwrQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE9ic2VydmVyIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFlhQ2xhc3RlciB9IGZyb20gJy4vLi4vLi4vZGlyZWN0aXZlcy9jbGFzdGVyJztcbmltcG9ydCB7IFlhTWFwc0FQSVdyYXBwZXIgfSBmcm9tICcuLi8uLi95YS1tYXBzLWFwaS13cmFwcGVyJztcbmltcG9ydCB7IE1hcmtlckNsYXN0ZXIsIENsYXN0ZXIgfSBmcm9tICcuLi8uLi95YS1tYXBzLXR5cGVzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENsYXN0ZXJNYW5hZ2VyIHtcbiAgcHJpdmF0ZSBfY2xhc3RlcnM6IE1hcDxZYUNsYXN0ZXIsIFByb21pc2U8Q2xhc3Rlcj4+ID1cbiAgbmV3IE1hcDxZYUNsYXN0ZXIsIFByb21pc2U8Q2xhc3Rlcj4+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfbWFwc1dyYXBwZXI6IFlhTWFwc0FQSVdyYXBwZXIsIHByaXZhdGUgX3pvbmU6IE5nWm9uZSkgeyB9XG5cbiAgcHVibGljIGFkZENsYXN0ZXIoY2xhc3RlcjogWWFDbGFzdGVyKSB7XG4gICAgY29uc3QgY2xhc3RlclByb21pc2UgPSB0aGlzLl9tYXBzV3JhcHBlci5jcmVhdGVDbGFzdGVyKGNsYXN0ZXIpO1xuICAgIHRoaXMuX2NsYXN0ZXJzLnNldChjbGFzdGVyLCBjbGFzdGVyUHJvbWlzZSk7XG4gIH1cblxuICAvKiBnZXROYXRpdmVNYXJrZXIobWFya2VyOiBZYU1hcmtlcik6IFByb21pc2U8TWFya2VyPiB7XG4gICAgIHJldHVybiB0aGlzLl9tYXJrZXJzLmdldChtYXJrZXIpO1xuICAgfVxuICAgY3JlYXRlRXZlbnRPYnNlcnZhYmxlPFQ+KGV2ZW50TmFtZTogc3RyaW5nLCBtYXJrZXI6IFlhTWFya2VyKTogT2JzZXJ2YWJsZTxUPiB7XG4gICAgIHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZSgob2JzZXJ2ZXI6IE9ic2VydmVyPFQ+KSA9PiB7XG4gICAgICAgdGhpcy5fbWFya2Vycy5nZXQobWFya2VyKS50aGVuKChtOiBNYXJrZXIpID0+IHtcbiAgICAgICAgIG0uZXZlbnRzLmFkZChldmVudE5hbWUsIChlOiBUKSA9PiB0aGlzLl96b25lLnJ1bigoKSA9PiBvYnNlcnZlci5uZXh0KGUpKSk7XG4gICAgICAgfSk7XG4gICAgIH0pO1xuICAgfVxuICAgKi9cbn1cbiJdfQ==