{"version":3,"sources":["ng://yamapng/lib/yamapng.service.ts","ng://yamapng/lib/yamapng.component.ts","ng://yamapng/lib/yamapng.module.ts","../../node_modules/tslib/tslib.es6.js","ng://yamapng/lib/utils/browser-globals.ts","ng://yamapng/lib/services/ya-maps-loader.ts","ng://yamapng/lib/ya-maps-api-wrapper.ts","ng://yamapng/lib/services/managers/marker-manager.ts","ng://yamapng/lib/directives/marker.ts","ng://yamapng/lib/services/managers/claster-manager.ts","ng://yamapng/lib/directives/claster.ts","ng://yamapng/lib/services/managers/objectManager-manager.ts","ng://yamapng/lib/directives/objectManager.ts","ng://yamapng/lib/directives/ymap.ts","ng://yamapng/lib/core.module.ts","ng://yamapng/lib/ya-maps-types.ts"],"names":["YamapngService","Injectable","args","providedIn","YamapngComponent","prototype","ngOnInit","Component","selector","template","YamapngModule","NgModule","declarations","imports","exports","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","WindowRef","getNativeWindow","window","DocumentRef","getNativeDocument","document","BROWSER_GLOBALS_PROVIDERS","LAZY_MAPS_API_CONFIG","InjectionToken","YaMapsAPILoader","config","w","d","this","_windowRef","_documentRef","load","script","createElement","type","async","defer","id","src","apiKey","_scriptLoadingPromise","Promise","resolve","reject","onload","onerror","body","appendChild","Optional","Inject","YaMapsAPIWrapper","_loader","_zone","_this","_map","_mapResolver","createMap","el","mapOptions","then","create","setTimeout","ymaps","Map","map","catch","console","log","setCenter","latitude","longitude","getCenter","panTo","points","options","subscribeToMapEvent","eventName","Observable","observer","events","add","arg","run","createMarker","marker","Placemark","balloonContentHeader","balloonContentBody","balloonContentFooter","iconContent","draggable","preset","iconLayout","iconImageHref","iconImageSize","iconImageOffset","geoObjects","removeGeo","overlay","remove","createClaster","claster","markers","length","myGeoObjects","Array","forEach","x","point","GeoObject","geometry","coordinates","lat","lng","clusterer","Clusterer","createObjectManager","objectManager","datasource","nativeObjectManager","ObjectManager","clusterize","gridSize","objects","set","objectPreset","clusters","clasterPreset","navigateToGeoObject","obj","getById","balloon","open","checkYaSciptLoaded","getElementById","objectManagerSetFilter","filter","setFilter","NgZone","MarkerManager","_mapsWrapper","_markers","deleteMarker","get","getNativeMarker","delete","addMarker","markerPromise","showBalloon","createEventObservable","markerId","YaMarker","_markerManager","markerClick","EventEmitter","dragEnd","_markerAddedToManger","_observableSubscriptions","_id","toString","ngOnChanges","changes","_addEventListeners","ngOnDestroy","s","unsubscribe","cs","subscribe","emit","ds","coords","getCoordinates","nativeMarker","Directive","providers","Input","Output","ClasterManager","_clasters","addClaster","clasterPromise","clasterId","YaClaster","_clasterManager","ObjectManagerManager","_managers","manager","managerPromise","getNativeManager","p","YaObjectManager","_manager","_addedToManger","selectedObjectId","YaMap","_elem","zoom","mapType","controls","mapClick","actionTick","mapInit","container","nativeElement","querySelector","_initMapInstance","updatePosition","center","_handleMapMouseEvents","panToObjects","params","clickEvents","name","emitter","event","ElementRef","coreDirectives","YaCoreModule","forRoot","yaMapsAPILoaderConfig","ngModule","__spread","arguments","concat","provide","useClass","useValue","YaCoreModuleForRoot","yandex"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YamapngService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-yamapng',\n  template: `\n    <p>\n      yamapng works!\n    </p>\n  `,\n  styles: []\n})\nexport class YamapngComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { YamapngComponent } from './yamapng.component';\n\n@NgModule({\n  declarations: [YamapngComponent],\n  imports: [\n  ],\n  exports: [YamapngComponent]\n})\nexport class YamapngModule { }\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Provider } from '@angular/core';\n\nexport class WindowRef {\n  public getNativeWindow(): any { return window; }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class DocumentRef {\n\n  public getNativeDocument(): any {\n    return document;\n  }\n\n}\n\nexport const BROWSER_GLOBALS_PROVIDERS: Provider[] = [WindowRef, DocumentRef];\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { DocumentRef, WindowRef } from './../utils/browser-globals';\n\n/**\n * Token for the config of the YaMapsAPILoaderConfigLiteral. Please provide an object of type {@link\n  * YaMapsAPILoaderConfigLiteral}.\n  */\n export const LAZY_MAPS_API_CONFIG = new InjectionToken<YaMapsAPILoaderConfigLiteral>('angular-ya-maps MAPS_API_CONFIG');\n\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface YaMapsAPILoaderConfigLiteral {\n  /**\n   * API Key.\n   */\n  apiKey?: string;\n}\n\n@Injectable()\nexport class YaMapsAPILoader {\n    private _scriptLoadingPromise: Promise<void>;\n    private config: YaMapsAPILoaderConfigLiteral;\n    private _windowRef: WindowRef;\n    private _documentRef: DocumentRef;\n\n    constructor(@Optional() @Inject(LAZY_MAPS_API_CONFIG) config: any = null, w: WindowRef, d: DocumentRef) {\n        this.config = config;\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n\n    public load(): Promise<void> {\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = false;\n        script.defer = true;\n        script.id = 'YaScript';\n        const callbackName = `angular2YAMapsAPILoader`;\n        script.src = `https://api-maps.yandex.ru/2.1/?apikey=${this.config.apiKey}&lang=ru_RU`;\n        // tslint:disable-next-line:ban-types\n        this._scriptLoadingPromise = new Promise<void>((resolve: Function, reject: Function) => {\n            script.onload = () => { resolve(); };\n            script.onerror = (error: Event) => { reject(); };\n        });\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\n\nimport * as mapTypes from './ya-maps-types';\nimport { YaMapsAPILoader } from './services/ya-maps-loader';\nimport { YaMarker } from './directives/marker';\nimport { YaClaster } from './directives/claster';\nimport { YaObjectManager } from './directives/objectManager';\nimport { DocumentRef, WindowRef } from './utils/browser-globals';\n\ndeclare var ymaps: any;\n\n@Injectable()\nexport class YaMapsAPIWrapper {\n    private _map: Promise<mapTypes.YandexMap>;\n    private _mapResolver: (value?: mapTypes.YandexMap) => void;\n    private _documentRef: DocumentRef;\n\n    constructor(private _loader: YaMapsAPILoader, private _zone: NgZone, d: DocumentRef) {\n        this._documentRef = d;\n        this._map = new Promise<mapTypes.YandexMap>((resolve: () => void) => {\n            this._mapResolver = resolve;\n        });\n    }\n\n    public createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void> {\n        const res = this._loader.load().then(() => {\n            const create = () => setTimeout(() => {\n                if (ymaps.Map) {\n                    const map = new ymaps.Map(el, mapOptions);\n                    this._mapResolver(map as mapTypes.YandexMap);\n                } else {\n                    create();\n                }\n            }, 100);\n            create();\n        }).catch((e) => console.log(e));\n        return res;\n    }\n\n    public setCenter(latitude: number, longitude: number) {\n        this._map.then((map: mapTypes.YandexMap) => {\n            map.setCenter([latitude, longitude]);\n        });\n    }\n\n    public getCenter(): Promise<void> {\n        return this._map.then((map: mapTypes.YandexMap) => {\n            return map.getCenter();\n        });\n    }\n\n    public panTo(points: any[], options: any[]) {\n        this._map.then((map: mapTypes.YandexMap) => {\n            map.panTo(points, options);\n        });\n    }\n\n    public subscribeToMapEvent<E>(eventName: string): Observable<E> {\n        return Observable.create((observer: Observer<E>) => {\n            this._map.then((m: mapTypes.YandexMap) => {\n                m.events.add(eventName, (arg: E) => { this._zone.run(() => observer.next(arg)); });\n            });\n        });\n    }\n\n    public createMarker(marker: YaMarker): Promise<mapTypes.Marker> {\n        return this._map.then((map: mapTypes.YandexMap) => {\n            const m = new ymaps.Placemark([marker.latitude, marker.longitude], {\n                balloonContentHeader: marker.balloonContentHeader,\n                balloonContentBody: marker.balloonContentBody,\n                balloonContentFooter: marker.balloonContentFooter,\n                iconContent: marker.iconContent\n            },\n                {\n                    draggable: marker.draggable,\n                    preset: marker.preset,\n                    iconLayout: marker.iconLayout,\n                    iconImageHref: marker.iconImageHref,\n                    iconImageSize: marker.iconImageSize,\n                    iconImageOffset: marker.iconImageOffset\n                });\n            map.geoObjects.add(m);\n            return m;\n        });\n    }\n\n    public removeGeo(overlay: any) {\n        this._map.then((map: mapTypes.YandexMap) => {\n            map.geoObjects.remove(overlay);\n        });\n    }\n\n    public createClaster(claster: YaClaster): Promise<mapTypes.Claster> {\n        return this._map.then((map: mapTypes.YandexMap) => {\n            if (claster.markers.length === 0) {\n                return;\n            }\n\n            let myGeoObjects: any[];\n            myGeoObjects = new Array<any>();\n            claster.markers.forEach((x: mapTypes.MarkerClaster) => {\n                const point = new ymaps.GeoObject({\n                    geometry: { type: x.type, coordinates: [x.lat, x.lng] }\n                });\n                myGeoObjects.push(point);\n            });\n\n            const clusterer = new ymaps.Clusterer({});\n            clusterer.add(myGeoObjects);\n            map.geoObjects.add(clusterer);\n\n            return clusterer;\n        });\n\n    }\n\n    public createObjectManager(objectManager: YaObjectManager): any {\n        return this._map.then((map: mapTypes.YandexMap) => {\n\n            if (objectManager.datasource.length === 0) {\n                return;\n            }\n\n            const nativeObjectManager = new ymaps.ObjectManager({\n                clusterize: objectManager.clusterize,\n                gridSize: objectManager.gridSize\n            });\n\n            nativeObjectManager.add(objectManager.datasource);\n\n            nativeObjectManager.objects.options.set('preset', objectManager.objectPreset);\n            nativeObjectManager.clusters.options.set('preset', objectManager.clasterPreset);\n            map.geoObjects.add(nativeObjectManager);\n            return nativeObjectManager;\n        });\n    }\n\n    public navigateToGeoObject(objectManager: any, id: any) {\n        const obj = objectManager.objects.getById(id);\n        if (obj) {\n            this.setCenter(obj.geometry.coordinates[0], obj.geometry.coordinates[1]);\n            objectManager.objects.balloon.open(id);\n        }\n    }\n\n    public checkYaSciptLoaded() {\n        return this._documentRef.getNativeDocument().getElementById('YaScript');\n    }\n\n    public objectManagerSetFilter(objectManager: any, filter: any) {\n        objectManager.setFilter(filter);\n    }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\n\nimport { YaMarker } from './../../directives/marker';\n\nimport { YaMapsAPIWrapper } from '../../ya-maps-api-wrapper';\nimport { Marker } from '../../ya-maps-types';\n\n@Injectable()\nexport class MarkerManager {\n  private _markers: Map<YaMarker, Promise<Marker>> =\n  new Map<YaMarker, Promise<Marker>>();\n\n  constructor(private _mapsWrapper: YaMapsAPIWrapper, private _zone: NgZone) { }\n\n  public deleteMarker(marker: YaMarker): Promise<void> {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    // tslint:disable-next-line:no-shadowed-variable\n    return m.then((m: Marker) => {\n      return this._zone.run(() => {\n        // tslint:disable-next-line:no-shadowed-variable\n        this.getNativeMarker(marker).then((m: Marker) => {\n          this._mapsWrapper.removeGeo(m);\n          this._markers.delete(marker);\n        });\n      });\n    });\n  }\n\n  public addMarker(marker: YaMarker) {\n    const markerPromise = this._mapsWrapper.createMarker(marker);\n    this._markers.set(marker, markerPromise);\n  }\n\n  public showBalloon(marker: YaMarker) {\n    this.getNativeMarker(marker).then((m: Marker) => {\n      m.balloon.open();\n    });\n\n  }\n\n  public getNativeMarker(marker: YaMarker): Promise<Marker> {\n    return this._markers.get(marker);\n  }\n\n  public createEventObservable<T>(eventName: string, marker: YaMarker): Observable<T> {\n    return Observable.create((observer: Observer<T>) => {\n      this._markers.get(marker).then((m: Marker) => {\n        m.events.add(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Directive, EventEmitter, OnChanges, OnDestroy, SimpleChange, Input, Output } from '@angular/core';\n\nimport { YaMapsAPIWrapper } from '../ya-maps-api-wrapper';\nimport * as mapTypes from '../ya-maps-types';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { Marker } from '../ya-maps-types';\nimport { Subscription } from 'rxjs';\n\nlet markerId = 0;\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'ya-marker',\n  providers: [\n    YaMapsAPIWrapper\n  ]\n})\n\n// tslint:disable-next-line:directive-class-suffix\nexport class YaMarker implements OnChanges, OnDestroy {\n  @Input() public latitude: number;\n  @Input() public longitude: number;\n  @Input() public balloonLayout: any;\n  @Input() public balloonContentHeader: string;\n  @Input() public balloonContentBody: string;\n  @Input() public balloonContentFooter: string;\n  @Input() public draggable = false;\n  @Input() public preset = 'islands#blueIcon';\n  @Input() public iconContent: string;\n  @Input() public showInfo: boolean;\n  // default#image\n  @Input() public iconLayout: any;\n  @Input() public iconImageHref: any;\n  // [30, 42]\n  @Input() public iconImageSize: any;\n  // [-5, -38]\n  @Input() public iconImageOffset: any;\n\n  @Output() public markerClick: EventEmitter<void> = new EventEmitter<void>();\n  // tslint:disable-next-line:max-line-length\n  @Output() public dragEnd: EventEmitter<mapTypes.MapMouseEvent> = new EventEmitter<mapTypes.MapMouseEvent>();\n\n  private _markerAddedToManger = false;\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n\n  constructor(private _markerManager: MarkerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._markerAddedToManger) {\n\n      this._markerManager.addMarker(this);\n      this._markerAddedToManger = true;\n      this._addEventListeners();\n      return;\n    }\n    if (changes['showInfo']) {\n      this._markerManager.showBalloon(this);\n    }\n  }\n\n  public ngOnDestroy() {\n    this._markerManager.deleteMarker(this);\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  private _addEventListeners() {\n    // click event\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n      this._markerManager.showBalloon(this);\n      this.markerClick.emit(null);\n    });\n    this._observableSubscriptions.push(cs);\n    // dragend event\n    // tslint:disable-next-line:max-line-length\n    const ds = this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragend', this).subscribe((e: mapTypes.MouseEvent) => {\n\n      const thisPlacemark = e.get('target');\n      const coords = thisPlacemark.geometry.getCoordinates();\n      this._markerManager.getNativeMarker(this).then((m: Marker) => {\n        // tslint:disable-next-line:max-line-length\n        this.dragEnd.emit({ lat: coords[0], lng: coords[1], nativeMarker: m } as mapTypes.MapMouseEvent);\n      });\n    });\n    this._observableSubscriptions.push(ds);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\n\nimport { YaClaster } from './../../directives/claster';\nimport { YaMapsAPIWrapper } from '../../ya-maps-api-wrapper';\nimport { MarkerClaster, Claster } from '../../ya-maps-types';\n\n@Injectable()\nexport class ClasterManager {\n  private _clasters: Map<YaClaster, Promise<Claster>> =\n  new Map<YaClaster, Promise<Claster>>();\n\n  constructor(private _mapsWrapper: YaMapsAPIWrapper, private _zone: NgZone) { }\n\n  public addClaster(claster: YaClaster) {\n    const clasterPromise = this._mapsWrapper.createClaster(claster);\n    this._clasters.set(claster, clasterPromise);\n  }\n\n  /* getNativeMarker(marker: YaMarker): Promise<Marker> {\n     return this._markers.get(marker);\n   }\n   createEventObservable<T>(eventName: string, marker: YaMarker): Observable<T> {\n     return Observable.create((observer: Observer<T>) => {\n       this._markers.get(marker).then((m: Marker) => {\n         m.events.add(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n       });\n     });\n   }\n   */\n}\n","import {\n  Directive,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChange,\n  AfterContentInit,\n  ContentChildren,\n  QueryList,\n  Input } from '@angular/core';\n\nimport { YaMapsAPIWrapper } from '../ya-maps-api-wrapper';\nimport * as mapTypes from '../ya-maps-types';\nimport { ClasterManager } from '../services/managers/claster-manager';\nimport { Claster, MarkerClaster } from '../ya-maps-types';\n\nlet clasterId = 0;\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: 'ya-claster',\n    providers: [\n        YaMapsAPIWrapper\n    ]\n})\n\n// tslint:disable-next-line:directive-class-suffix\nexport class YaClaster implements OnChanges, OnDestroy {\n    @Input() public markers: any[];\n\n    private _id: string;\n    private _markerAddedToManger = false;\n\n    constructor(private _clasterManager: ClasterManager) {\n        this._id = (clasterId++).toString();\n    }\n\n    public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n        if (!this._markerAddedToManger) {\n            this._clasterManager.addClaster(this);\n        }\n    }\n\n    public ngOnDestroy() { }\n\n    private _addEventListeners() { }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\n\nimport { YaObjectManager } from './../../directives/objectManager';\nimport { YaMapsAPIWrapper } from '../../ya-maps-api-wrapper';\nimport { ObjectManager } from '../../ya-maps-types';\n\n@Injectable()\nexport class ObjectManagerManager {\n  private _managers: Map<YaObjectManager, Promise<ObjectManager>> =\n  new Map<YaObjectManager, Promise<ObjectManager>>();\n\n  constructor(private _mapsWrapper: YaMapsAPIWrapper, private _zone: NgZone) { }\n\n  public add(manager: YaObjectManager) {\n    const managerPromise = this._mapsWrapper.createObjectManager(manager);\n    this._managers.set(manager, managerPromise);\n  }\n\n  public navigateToGeoObject(manager: YaObjectManager, id: number) {\n    this.getNativeManager(manager).then((p: any) => {\n      this._mapsWrapper.navigateToGeoObject(p, id);\n    });\n\n  }\n\n  public getNativeManager(manager: YaObjectManager): Promise<ObjectManager> {\n    return this._managers.get(manager);\n  }\n\n  public setFilter(manager: YaObjectManager, filter: any) {\n    this.getNativeManager(manager).then((p: any) => {\n      this._mapsWrapper.objectManagerSetFilter(p, filter);\n    });\n  }\n}\n","import {\n  Directive, EventEmitter, OnChanges, OnDestroy, SimpleChange,\n  AfterContentInit, ContentChildren, QueryList, Input\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { YaMapsAPIWrapper } from '../ya-maps-api-wrapper';\nimport * as mapTypes from '../ya-maps-types';\nimport { ObjectManagerManager } from '../services/managers/objectManager-manager';\n\nlet markerId = 0;\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'ya-object-manager',\n  providers: [\n    YaMapsAPIWrapper\n  ]\n})\n\n// tslint:disable-next-line:directive-class-suffix\nexport class YaObjectManager implements OnChanges {\n  @Input() public clusterize = false;\n  @Input() public datasource: any;\n  @Input() public clasterPreset = 'islands#blueIcon';\n  @Input() public objectPreset = 'islands#blueClusterIcons';\n  @Input() public gridSize = 0;\n  @Input() public selectedObjectId: number;\n  @Input() public filter: any;\n\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n  private _addedToManger = false;\n\n  constructor(private _manager: ObjectManagerManager) {\n    this._id = (markerId++).toString();\n  }\n\n  public ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._addedToManger) {\n\n      this._manager.add(this);\n      this._addedToManger = true;\n      return;\n    }\n\n    if (changes['selectedObjectId']) {\n      this._manager.navigateToGeoObject(this, this.selectedObjectId);\n    }\n    if (changes['filter']) {\n      this._manager.setFilter(this, this.filter);\n    }\n\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  Input,\n  Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { YaMapsAPIWrapper } from '../ya-maps-api-wrapper';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { ClasterManager } from '../services/managers/claster-manager';\nimport { ObjectManagerManager } from '../services/managers/objectManager-manager';\nimport * as mapTypes from '../ya-maps-types';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ya-map',\n  providers: [\n    YaMapsAPIWrapper,\n    MarkerManager,\n    ClasterManager,\n    ObjectManagerManager\n  ],\n  template: `\n    <div class=\"map-container-inner\" id=\"map\" >\n      <ng-content></ng-content>\n    </div>\n  `\n})\n// tslint:disable-next-line:component-class-suffix\nexport class YaMap implements OnInit, OnChanges {\n\n  @Input() public longitude = 0;\n  @Input() public latitude = 0;\n  @Input() public zoom = 8;\n  @Input() public minZoom: number;\n  @Input() public maxZoom: number;\n  @Input() public mapType: any = 'yandex#map';\n  @Input() public controls: any[] = null;\n  @Input() public panToObjects: mapTypes.PanToObjects;\n  // tslint:disable-next-line:max-line-length\n  @Output() public mapClick: EventEmitter<mapTypes.MapClickMouseEvent> = new EventEmitter<mapTypes.MapClickMouseEvent>();\n  @Output() public actionTick: EventEmitter<mapTypes.MapClickMouseEvent> = new EventEmitter<mapTypes.MapClickMouseEvent>();\n\n  public mapInit = false;\n\n  private _observableSubscriptions: Subscription[] = [];\n\n  constructor(private _elem: ElementRef, private _mapsWrapper: YaMapsAPIWrapper) { }\n\n  public ngOnInit() {\n    console.log('map iit');\n    const container = this._elem.nativeElement.querySelector('.map-container-inner');\n    this._initMapInstance(container);\n    this.mapInit = true;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (this.mapInit) {\n      this.updatePosition(changes);\n      this.panTo(changes);\n    }\n  }\n\n  private _initMapInstance(el: HTMLElement) {\n    if (this.controls != null) {\n      this._mapsWrapper.createMap(el, {\n        center: [this.latitude, this.longitude], zoom: this.zoom, type: this.mapType,\n        controls: this.controls\n      });\n\n    } else {\n      this._mapsWrapper.createMap(el, {\n        center: [this.latitude, this.longitude], zoom: this.zoom, type: this.mapType\n      });\n\n    }\n\n    this._handleMapMouseEvents();\n  }\n\n  private updatePosition(changes: SimpleChanges) {\n    if (changes['latitude'] == null && changes['longitude'] == null) {\n      return;\n    }\n    this._mapsWrapper.setCenter(this.latitude, this.longitude);\n  }\n\n  private panTo(changes: SimpleChanges) {\n    if (changes['panToObjects'] == null) {\n      return;\n    }\n    this._mapsWrapper.panTo(this.panToObjects.points, this.panToObjects.params);\n  }\n\n  private _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n    interface Event { name: string; emitter: Emitter; }\n\n    const clickEvents: Event[] = [\n      { name: 'click', emitter: this.mapClick }\n    ];\n    const events: Event[] = [\n      { name: 'actiontick', emitter: this.actionTick }\n    ];\n\n    clickEvents.forEach((e: Event) => {\n      const s = this._mapsWrapper.subscribeToMapEvent<{ latLng: any }>(e.name).subscribe(\n        (event: any) => {\n          const coords = event.get('coords');\n          const value = { lat: coords[0], lng: coords[1] } as mapTypes.MapClickMouseEvent;\n          e.emitter.emit(value);\n        });\n      this._observableSubscriptions.push(s);\n    });\n\n    events.forEach((e: Event) => {\n      const s = this._mapsWrapper.subscribeToMapEvent<{ latLng: any }>(e.name).subscribe(\n        (event: any) => {\n\n          this._mapsWrapper.getCenter().then((coords: any) => {\n            this.latitude = coords[0];\n            this.longitude = coords[1];\n            const value = { lat: coords[0], lng: coords[1] } as mapTypes.MapClickMouseEvent;\n            e.emitter.emit(value);\n          });\n\n        });\n      this._observableSubscriptions.push(s);\n    });\n\n  }\n}\n\nimport { NgModule } from '@angular/core';\n\n\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { YaMarker } from './directives/marker';\nimport { YaClaster } from './directives/claster';\nimport { YaObjectManager } from './directives/objectManager';\nimport { YaMapsAPILoader, YaMapsAPILoaderConfigLiteral, LAZY_MAPS_API_CONFIG } from './services/ya-maps-loader';\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\nimport { YaMap } from './directives/ymap';\n\nexport * from './ya-maps-types';\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    YaMap,\n    YaMarker,\n    YaClaster,\n    YaObjectManager\n  ];\n}\n\n/**\n * The angular-ya-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `YaCoreModule.forRoot()` in your app module.\n */\n@NgModule({ declarations: coreDirectives(), exports: coreDirectives() })\nexport class YaCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  public static forRoot(yaMapsAPILoaderConfig: YaMapsAPILoaderConfigLiteral): ModuleWithProviders {\n    return {\n      ngModule: YaCoreModule,\n      providers: [\n        ...BROWSER_GLOBALS_PROVIDERS,\n        { provide: YaMapsAPILoader, useClass: YaMapsAPILoader },\n        { provide: LAZY_MAPS_API_CONFIG, useValue: yaMapsAPILoaderConfig }\n      ],\n    };\n  }\n}\n\nexport function YaCoreModuleForRoot(yaMapsAPILoaderConfig: YaMapsAPILoaderConfigLiteral) {\n  return [\n    YaCoreModule.forRoot(yaMapsAPILoaderConfig)\n  ];\n}\n","export let yandex: any;\n\nexport interface YandexMap extends MVCObject {\n\n  // constructor(el: HTMLElement, opts?: MapOptions): void;\n  events: any;\n  geoObjects: any;\n  setCenter(param: any[]): void;\n  getCenter(): any;\n  panTo(points: any[], options: any[]): void;\n  removeOverlay(overlay: any): void;\n}\n\nexport interface LatLng {\n  // constructor(lat: number, lng: number): void;\n  lat(): number;\n  lng(): number;\n}\nexport interface PanToObjects {\n  points: any[];\n  params: any[];\n}\n\nexport interface Marker extends MVCObject {\n  // constructor(): void;\n  events: any;\n  balloon: any;\n  layoutBalloon: any;\n  balloonContentHeader: string;\n  balloonContentBody: string;\n  balloonContentFooter: string;\n  draggable: boolean;\n  iconLayout: any;\n  iconImageHref: any;\n  iconImageSize: any;\n  iconImageOffset: any;\n  setMap(map: YandexMap): void;\n  setPosition(latLng: LatLng | LatLngLiteral): void;\n}\n\nexport interface Claster {\n  // tslint:disable-next-line:no-misused-new\n  constructor(): void;\n}\n\nexport interface MarkerClaster {\n  lat: number;\n  lng: number;\n  balloonContentHeader: string;\n  balloonContentBody: string;\n  balloonContentFooter: string;\n  type: string;\n}\n\nexport interface LatLngLiteral {\n  lat: number;\n  lng: number;\n}\n\n// tslint:disable-next-line:ban-types\nexport interface MVCObject { addListener(eventName: string, handler: Function): MapsEventListener; }\n\nexport interface MapsEventListener { remove(): void; }\nexport interface MouseEvent { latLng: LatLng; get: any; }\nexport interface MapClickMouseEvent { lat: number; lng: number; }\nexport interface MapMouseEvent { lat: number; lng: number; nativeMarker: any; }\nexport interface MapOptions {\n  zoom?: number;\n  minZoom?: number;\n  maxZoom?: number;\n  center?: any;\n  type: any;\n  controls?: any[];\n}\n\nexport interface ObjectManager {\n  clusterize: boolean;\n  objects: any[];\n}\n"]}