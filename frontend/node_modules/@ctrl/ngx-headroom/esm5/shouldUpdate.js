export default function (lastKnownScrollY, currentScrollY, disable, pinStart, downTolerance, upTolerance, state, height) {
    if (lastKnownScrollY === void 0) { lastKnownScrollY = 0; }
    if (currentScrollY === void 0) { currentScrollY = 0; }
    var scrollDirection = currentScrollY >= lastKnownScrollY ? 'down' : 'up';
    var distanceScrolled = Math.abs(currentScrollY - lastKnownScrollY);
    // We're disabled
    if (disable) {
        return {
            action: 'none',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
        // We're at the top and not fixed yet.
    }
    else if (currentScrollY <= pinStart && state !== 'unfixed') {
        return {
            action: 'unfix',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
        // We're unfixed and headed down. Carry on.
    }
    else if (currentScrollY <= height &&
        scrollDirection === 'down' &&
        state === 'unfixed') {
        return {
            action: 'none',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
        // We're past the header and scrolling down.
        // We transition to "unpinned" if necessary.
    }
    else if (scrollDirection === 'down' &&
        ['pinned', 'unfixed'].indexOf(state) >= 0 &&
        currentScrollY > height + pinStart &&
        distanceScrolled > downTolerance) {
        return {
            action: 'unpin',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
        // We're scrolling up, we transition to "pinned"
    }
    else if (scrollDirection === 'up' &&
        distanceScrolled > upTolerance &&
        ['pinned', 'unfixed'].indexOf(state) < 0) {
        return {
            action: 'pin',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
        // We're scrolling up, and inside the header.
        // We transition to pin regardless of upTolerance
    }
    else if (scrollDirection === 'up' &&
        currentScrollY <= height &&
        ['pinned', 'unfixed'].indexOf(state) < 0) {
        return {
            action: 'pin',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
    }
    else {
        return {
            action: 'none',
            scrollDirection: scrollDirection,
            distanceScrolled: distanceScrolled,
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdWxkVXBkYXRlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGN0cmwvbmd4LWhlYWRyb29tLyIsInNvdXJjZXMiOlsic2hvdWxkVXBkYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxPQUFPLFdBQ1osZ0JBQW9CLEVBQ3BCLGNBQWtCLEVBQ2xCLE9BQWlCLEVBQ2pCLFFBQWlCLEVBQ2pCLGFBQXNCLEVBQ3RCLFdBQW9CLEVBQ3BCLEtBQWMsRUFDZCxNQUFlO0lBUGYsaUNBQUEsRUFBQSxvQkFBb0I7SUFDcEIsK0JBQUEsRUFBQSxrQkFBa0I7SUFRbEIsSUFBTSxlQUFlLEdBQUcsY0FBYyxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUMzRSxJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxHQUFHLGdCQUFnQixDQUFDLENBQUM7SUFFckUsaUJBQWlCO0lBQ2pCLElBQUksT0FBTyxFQUFFO1FBQ1gsT0FBTztZQUNMLE1BQU0sRUFBRSxNQUFNO1lBQ2QsZUFBZSxpQkFBQTtZQUNmLGdCQUFnQixrQkFBQTtTQUNqQixDQUFDO1FBQ0Ysc0NBQXNDO0tBQ3ZDO1NBQU0sSUFBSSxjQUFjLElBQUksUUFBUSxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7UUFDNUQsT0FBTztZQUNMLE1BQU0sRUFBRSxPQUFPO1lBQ2YsZUFBZSxpQkFBQTtZQUNmLGdCQUFnQixrQkFBQTtTQUNqQixDQUFDO1FBQ0YsMkNBQTJDO0tBQzVDO1NBQU0sSUFDTCxjQUFjLElBQUksTUFBTTtRQUN4QixlQUFlLEtBQUssTUFBTTtRQUMxQixLQUFLLEtBQUssU0FBUyxFQUNuQjtRQUNBLE9BQU87WUFDTCxNQUFNLEVBQUUsTUFBTTtZQUNkLGVBQWUsaUJBQUE7WUFDZixnQkFBZ0Isa0JBQUE7U0FDakIsQ0FBQztRQUNGLDRDQUE0QztRQUM1Qyw0Q0FBNEM7S0FDN0M7U0FBTSxJQUNMLGVBQWUsS0FBSyxNQUFNO1FBQzFCLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBQ3pDLGNBQWMsR0FBRyxNQUFNLEdBQUcsUUFBUTtRQUNsQyxnQkFBZ0IsR0FBRyxhQUFhLEVBQ2hDO1FBQ0EsT0FBTztZQUNMLE1BQU0sRUFBRSxPQUFPO1lBQ2YsZUFBZSxpQkFBQTtZQUNmLGdCQUFnQixrQkFBQTtTQUNqQixDQUFDO1FBQ0YsZ0RBQWdEO0tBQ2pEO1NBQU0sSUFDTCxlQUFlLEtBQUssSUFBSTtRQUN4QixnQkFBZ0IsR0FBRyxXQUFXO1FBQzlCLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQ3hDO1FBQ0EsT0FBTztZQUNMLE1BQU0sRUFBRSxLQUFLO1lBQ2IsZUFBZSxpQkFBQTtZQUNmLGdCQUFnQixrQkFBQTtTQUNqQixDQUFDO1FBQ0YsNkNBQTZDO1FBQzdDLGlEQUFpRDtLQUNsRDtTQUFNLElBQ0wsZUFBZSxLQUFLLElBQUk7UUFDeEIsY0FBYyxJQUFJLE1BQU07UUFDeEIsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFDeEM7UUFDQSxPQUFPO1lBQ0wsTUFBTSxFQUFFLEtBQUs7WUFDYixlQUFlLGlCQUFBO1lBQ2YsZ0JBQWdCLGtCQUFBO1NBQ2pCLENBQUM7S0FDSDtTQUFNO1FBQ0wsT0FBTztZQUNMLE1BQU0sRUFBRSxNQUFNO1lBQ2QsZUFBZSxpQkFBQTtZQUNmLGdCQUFnQixrQkFBQTtTQUNqQixDQUFDO0tBQ0g7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oXG4gIGxhc3RLbm93blNjcm9sbFkgPSAwLFxuICBjdXJyZW50U2Nyb2xsWSA9IDAsXG4gIGRpc2FibGU/OiBib29sZWFuLFxuICBwaW5TdGFydD86IG51bWJlcixcbiAgZG93blRvbGVyYW5jZT86IG51bWJlcixcbiAgdXBUb2xlcmFuY2U/OiBudW1iZXIsXG4gIHN0YXRlPzogc3RyaW5nLFxuICBoZWlnaHQ/OiBudW1iZXIsXG4pIHtcbiAgY29uc3Qgc2Nyb2xsRGlyZWN0aW9uID0gY3VycmVudFNjcm9sbFkgPj0gbGFzdEtub3duU2Nyb2xsWSA/ICdkb3duJyA6ICd1cCc7XG4gIGNvbnN0IGRpc3RhbmNlU2Nyb2xsZWQgPSBNYXRoLmFicyhjdXJyZW50U2Nyb2xsWSAtIGxhc3RLbm93blNjcm9sbFkpO1xuXG4gIC8vIFdlJ3JlIGRpc2FibGVkXG4gIGlmIChkaXNhYmxlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGlvbjogJ25vbmUnLFxuICAgICAgc2Nyb2xsRGlyZWN0aW9uLFxuICAgICAgZGlzdGFuY2VTY3JvbGxlZCxcbiAgICB9O1xuICAgIC8vIFdlJ3JlIGF0IHRoZSB0b3AgYW5kIG5vdCBmaXhlZCB5ZXQuXG4gIH0gZWxzZSBpZiAoY3VycmVudFNjcm9sbFkgPD0gcGluU3RhcnQgJiYgc3RhdGUgIT09ICd1bmZpeGVkJykge1xuICAgIHJldHVybiB7XG4gICAgICBhY3Rpb246ICd1bmZpeCcsXG4gICAgICBzY3JvbGxEaXJlY3Rpb24sXG4gICAgICBkaXN0YW5jZVNjcm9sbGVkLFxuICAgIH07XG4gICAgLy8gV2UncmUgdW5maXhlZCBhbmQgaGVhZGVkIGRvd24uIENhcnJ5IG9uLlxuICB9IGVsc2UgaWYgKFxuICAgIGN1cnJlbnRTY3JvbGxZIDw9IGhlaWdodCAmJlxuICAgIHNjcm9sbERpcmVjdGlvbiA9PT0gJ2Rvd24nICYmXG4gICAgc3RhdGUgPT09ICd1bmZpeGVkJ1xuICApIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWN0aW9uOiAnbm9uZScsXG4gICAgICBzY3JvbGxEaXJlY3Rpb24sXG4gICAgICBkaXN0YW5jZVNjcm9sbGVkLFxuICAgIH07XG4gICAgLy8gV2UncmUgcGFzdCB0aGUgaGVhZGVyIGFuZCBzY3JvbGxpbmcgZG93bi5cbiAgICAvLyBXZSB0cmFuc2l0aW9uIHRvIFwidW5waW5uZWRcIiBpZiBuZWNlc3NhcnkuXG4gIH0gZWxzZSBpZiAoXG4gICAgc2Nyb2xsRGlyZWN0aW9uID09PSAnZG93bicgJiZcbiAgICBbJ3Bpbm5lZCcsICd1bmZpeGVkJ10uaW5kZXhPZihzdGF0ZSkgPj0gMCAmJlxuICAgIGN1cnJlbnRTY3JvbGxZID4gaGVpZ2h0ICsgcGluU3RhcnQgJiZcbiAgICBkaXN0YW5jZVNjcm9sbGVkID4gZG93blRvbGVyYW5jZVxuICApIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWN0aW9uOiAndW5waW4nLFxuICAgICAgc2Nyb2xsRGlyZWN0aW9uLFxuICAgICAgZGlzdGFuY2VTY3JvbGxlZCxcbiAgICB9O1xuICAgIC8vIFdlJ3JlIHNjcm9sbGluZyB1cCwgd2UgdHJhbnNpdGlvbiB0byBcInBpbm5lZFwiXG4gIH0gZWxzZSBpZiAoXG4gICAgc2Nyb2xsRGlyZWN0aW9uID09PSAndXAnICYmXG4gICAgZGlzdGFuY2VTY3JvbGxlZCA+IHVwVG9sZXJhbmNlICYmXG4gICAgWydwaW5uZWQnLCAndW5maXhlZCddLmluZGV4T2Yoc3RhdGUpIDwgMFxuICApIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWN0aW9uOiAncGluJyxcbiAgICAgIHNjcm9sbERpcmVjdGlvbixcbiAgICAgIGRpc3RhbmNlU2Nyb2xsZWQsXG4gICAgfTtcbiAgICAvLyBXZSdyZSBzY3JvbGxpbmcgdXAsIGFuZCBpbnNpZGUgdGhlIGhlYWRlci5cbiAgICAvLyBXZSB0cmFuc2l0aW9uIHRvIHBpbiByZWdhcmRsZXNzIG9mIHVwVG9sZXJhbmNlXG4gIH0gZWxzZSBpZiAoXG4gICAgc2Nyb2xsRGlyZWN0aW9uID09PSAndXAnICYmXG4gICAgY3VycmVudFNjcm9sbFkgPD0gaGVpZ2h0ICYmXG4gICAgWydwaW5uZWQnLCAndW5maXhlZCddLmluZGV4T2Yoc3RhdGUpIDwgMFxuICApIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWN0aW9uOiAncGluJyxcbiAgICAgIHNjcm9sbERpcmVjdGlvbixcbiAgICAgIGRpc3RhbmNlU2Nyb2xsZWQsXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgYWN0aW9uOiAnbm9uZScsXG4gICAgICBzY3JvbGxEaXJlY3Rpb24sXG4gICAgICBkaXN0YW5jZVNjcm9sbGVkLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==